
tx.clearResults() 
tx.clearList() 

--–õ–ò–¶–ï–ù–ó–ò–Ø 3
hl = {} file = io.open("license_3.io","r") for lol in file:lines() do table.insert(hl,lol) end l = {"T0X1C_738DJNDJS8W9283UDNKZ9W9293848HFJDUD767DIDDJJD8S8EOEIWLQPSPZLKXMZNEJE928EUFHNSKSLWOW9298RJDNXNKAOWO29398R7RHDNSKAKQP10983URJSJSKALP1PSKDBCBRVHWIIC7DIKWK29E8DUSHWNK9G98SJWJEIRIDIE"} if hl[1] == l[1] or hl[1] == l[2] or hl[1] == l[3] then 


else 
gg.alert("üíé 4 License\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüö´ LICENSE NOT FOUND üö´") 
gg.setVisible(true)
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
os.exit()
 end
 
 ----------------------------------------------------------------------------------------------------------------------------------------------------
 --–õ–ò–¶–ï–ù–ó–ò–Ø 4
 hl = {} file = io.open("license_4.io","r") for lol in file:lines() do table.insert(hl,lol) end l = {"T0X1C_73N38DJSOW93IRNDKS8EJ3NR8S9SIWN2J88XUXBSJE838U3NDKS9W001984URNDJOSOS0WIEUDHXBNSIS8D7DJENEI8E8DUZJJSIE8R7RUHDN"} if hl[1] == l[1] or hl[1] == l[2] or hl[1] == l[3] then 


else 
gg.alert("üíé 5 License\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüö´ LICENSE NOT FOUND üö´") 
gg.setVisible(true)
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
os.exit()
 end
 
 ---------------------------------------------------------------------------------------------------------------


local loadcode = false
local loadcod = false
local loadcodd = false
function split(szFullString, szSeparator)
local nFindStartIndex = 1 
local nSplitIndex = 1 
local nSplitArray = {} while true do 
local 
nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) 
if not nFindLastIndex then 
nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) 
break end 
nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) 
nFindStartIndex = nFindLastIndex + string.len(szSeparator) 
nSplitIndex = nSplitIndex + 1 end return 
nSplitArray end function 
xgxc(szpy, qmxg) for x = 1, #(qmxg) do 
xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] 
xgsz = qmxg[x]["value"] 
tx.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) 
xgsl = xgsl + 1 end end function 
xqmnb(qmnb) 
tx.clearResults() 
tx.setRanges(qmnb[1]["memory"]) 
tx.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) 
if tx.getResultCount() == 0 then 
tx.toast(qmnb[2]["name"] .. "üíöüíúüíö")
else 
tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 
tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 
tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 
if tx.getResultCount() == 0 then 
tx.toast(qmnb[2]["name"] .. "üíöüíö") 
else 
sl = tx.getResults(999999) 
sz = tx.getResultCount() 
xgsl = 0 if sz > 999999 then 
sz = 999999 end for i = 1, sz do 
pdsz = true for v = 4, #(qmnb) do if 
pdsz == true then 
pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] 
pysz[1].flags = qmnb[v]["type"] 
szpy = tx.getValues(pysz) 
pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") 
tzszpd = szpd[1] 
pyszpd = szpd[2] 
if tzszpd == pyszpd then 
pdjg = true pdsz = true else 
pdjg = false pdsz = false end end end 
if pdjg == true then 
szpy = sl[i].address xgxc(szpy, qmxg) 
xgjg = true end end 
if xgjg == true then 
tx.toast(qmnb[2]["name"] .. "üíöüíöüíö" .. xgsl .. "üíúüíú") 
else 
tx.toast(qmnb[2]["name"] .. "üíöüíöüíö") 
end 
end 
end 
end

function SHCF()
os.exit()
SHCF()
end
dog=0
CS=0 
function SH_searchNumber(n,type,ft,sign,r,s)
tx.setVisible(false) 
tx.searchNumber(n,type,ft,sign,r,s)
if tx.isVisible(true) then
dog=1
tx.setVisible(false) 
end 
if dog > 0 then
nc()
dog = 0
CS=CS-1
end
if CS < 0 then
SHCF()
end
end


function Voice(Rain)

end



local _KY,jldz,jmzj=function(mtz,mzj)for xh=1,10 do mtz=mtz:gsub(mzj[xh],xh-1)end return mtz end,{},{}for xh=1,10 do jmzj[xh]=debug.getinfo(_KY)[string.char(115,111,117,114,99,101)]:sub(xh,xh)end function KYXG(DZ,XGSJ,GNM,JLDZ)local t={}for i=1,#DZ do for k,w in ipairs(XGSJ) do offset=w[1]*4 t[#t+1]={}t[#t].address=DZ[i]+offset t[#t].flags=w[2]t[#t].value=w[3]if(w[4]==true)then local item={}item[#item+1]=t[#t]item[#item].freeze=true tx.addListItems(item)end end end tx.setValues(t)tx.toast("‚úÖ‚úÖ")end function KY_ZZ(NCLX,SSSJ,XGSJ,GNM)tx.setVisible(false)if jldz[NCLX[4]]==nil then tx.clearResults()tx.setRanges(NCLX[1])tx.searchNumber(NCLX[2],NCLX[3])local count=tx.getResultCount()local result=tx.getResults(count)tx.clearResults()local data={}if(count>0)then for i,v in ipairs(result) do v.isUseful=true end for k=1,#SSSJ do local tmp={}local offset=_KY(SSSJ[k][1],jmzj)*4 local num=_KY(SSSJ[k][2],jmzj)for i,v in ipairs(result) do tmp[#tmp+1]={}tmp[#tmp].address=v.address+offset tmp[#tmp].flags=v.flags end tmp=tx.getValues(tmp)for i,v in ipairs(tmp) do if (v.value~=num)then result[i].isUseful=false end end end for i,v in ipairs(result) do if (v.isUseful)then data[#data+1]=v.address end end if data[1]==nil then tx.toast("‚úÖ‚úÖ‚úÖ")else if NCLX[4]~=false then jldz[NCLX[4]]=data KYXG(data,XGSJ,GNM,"‚úÖ")else KYXG(data,XGSJ,GNM,"...")end end else tx.toast("error")end else KYXG(jldz[NCLX[4]],XGSJ,GNM,"...")end end




function SearchWrite(Search, Write, Type) tx.clearResults()tx.setVisible(false) tx.searchNumber(Search[1][1]*-1,Type) local count = tx.getResultCount() local result = tx.getResults(count)tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do  local tmp = {}local offset = Search[k][2] - base  local num = Search[k][1]for i, v in ipairs(result) do tmp[#tmp+1] = {}tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp)for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {}local base = Search[1][2]for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {}t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1]if (w[3] == true) then local item = {}item[#item+1] = t[#t]item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t)tx.toast("‚úÖ‚úÖ‚úÖ")else  return false end else  return false end end  

function SearchWriteohnb(Search, Write, Ohnb) tx.clearResults() tx.setVisible(false) SH_searchNumber(Search[1][1], Ohnb) local count = tx.getResultCount() local result = tx.getResults(count) tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then tx.toast("‚ôªÔ∏è‚ôªÔ∏è‚ôªÔ∏è"..#data.."‚úÖ‚úÖ‚úÖ") local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Ohnb t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t) else tx.toast("error", false) return false end else tx.toast("error") return false end end


function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] tx.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) xgsl = xgsl + 1 end end function xqmnb(qmnb) tx.clearResults() tx.setRanges(qmnb[1]["memory"]) tx.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if tx.getResultCount() == 0 then tx.toast(qmnb[2]["name"] .. "error")else tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if tx.getResultCount() == 0 then tx.toast(qmnb[2]["name"] .. "error") else sl = tx.getResults(999999) sz = tx.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = tx.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) xgjg = true end end if xgjg == true then tx.toast(qmnb[2]["name"] .. "‚úÖ‚úÖ‚úÖ‚ôªÔ∏è" .. xgsl .. "zzz") else tx.toast(qmnb[2]["name"] .. "error") end end end end

function SearchWrite(Search, Write, Type) tx.clearResults() tx.setVisible(false) tx.searchNumber(Search[1][1], Type) local count = tx.getResultCount() local result = tx.getResults(count) tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then tx.toast('üá∫üá¶ üá∫üá¶ üá∫üá¶') local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t) else tx.toast("üá∫üá¶", false) return false end else tx.toast("üá∫üá¶") return false end end






tx.toast("Hello Great Hacker ü§ó") 


g = tx.alert("\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄüíö Made A T0X1C - V$XV Script üíö\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüñ§ Thank You So Much - Wuxin üñ§\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†ÅøENG |üëå Welcome to my script, thanks for buying, good game.\n‚îÄ‚îÄ‚îÄ‚îÄ\nüá∑üá∫RU |üëå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π —Å–∫—Ä–∏–ø—Ç, —Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –ø–æ–∫—É–ø–∫—É, —Ö–æ—Ä–æ—à–µ–π –≤–∞–º –∏–≥—Ä—ã. \n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ The Script Was Tested On Poco F1 With Root Rights\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n‚ôªÔ∏è Powered By GG T0X1C ‚ôªÔ∏è","END", "", "EXIT" ) 
if g == 1 then 
elseif g == 2 then 
elseif g == 3 then
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
tx.toast("üëã GoodBye üëã")
os.exit()
end 

function Main() 
BG = tx.choice({
"| üá∑üá∫ | RU",
"| üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø | ENG", 
"| üë§ | Author",
"üö™ EXIT "
},nil, "üíé V$XV - By T0X1C\nüéÆ Last Island Of Survival ")
if BG == 1 then M1() end 
if BG == 2 then M2() end 
if BG == 3 then author() end   
if BG == 4 then ex() end
T = -1
end

function M1() 
BG = tx.choice({
	"| üíé | –ü–µ—Ä—Å–æ–Ω–∞–∂", 
	"| üíé | –ú–∏—Ä", 
	"| üíé | –û—Ä—É–∂–∏–µ", 
	"üîô –ù–ê–ó–ê–î", 
	}, nil, "üíéV$XV Hack - By T0X1C\nüåÄ –ú–µ–Ω—é") 
	if BG == 1 then S1() end 
	if BG == 2 then S2() end 
	if BG == 3 then S3() end 
	if BG == 4 then Main() end 
	end 

function S1() 
BG = tx.multiChoice({
	"üóø –ê–Ω—Ç–µ–Ω–∞", 
	"üóø –í–• / –ë–µ–ª—ã–π –ü–µ—Ä—Å–æ–Ω–∞–∂", 
	"üóø –ê–π–ø–∞–¥ –û–±–∑–æ—Ä", 
	"üóø–•–æ–¥–∏—Ç—å –ü–æ–¥ –í–æ–¥–æ–π", 
	"üîô –ù–ê–ó–ê–î", 
	}, nil, "üíé V$XV Hack\nüåÄ –ú–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂") 
	if BG[1] == true then F1() end 
	if BG[2] == true then F2() end 
	if BG[3] == true then F3() end 
	if BG[4] == true then F4() end 
	if BG[5] == true then M1() end 
	if BG == nil then else end
end 

function F4() 
FC = tx.alert("Love You", "–í–∫–ª", "–í—ã–∫–ª","–ù–∞–∑–∞–¥" )
  if FC == 1 then
    tx.clearResults()
    tx.setRanges(32)
    tx.searchNumber("1.0F;0.00999999978F;3.7835059e-43F;4.2038954e-45F;10,000.0F;10,000.001953125F", tx.REGION_C_BSS, false, tx.SIGN_FUZZY_EQUAL, 0, -1)
    tx.searchNumber("10000", tx.REGION_C_BSS, false, tx.SIGN_FUZZY_EQUAL, 0, -1)
    tx.getResults(999)
    tx.editAll("0.0012345", tx.REGION_C_BSS)
    tx.clearResults()
    tx.toast("‚úÖ‚úÖ") 
  elseif FC == 2 then
    tx.clearResults()
    tx.setRanges(32)
    tx.searchNumber("0.0012345", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)
    tx.getResults(999)
    tx.editAll("10000", tx.TYPE_FLOAT)
    tx.clearResults()
    elseif FC == 3 then 
    S1() 
    tx.toast("‚úÖ‚úÖ") 
  end
end 

function F3()
FC = tx.alert("Love You","–í—ã–∫–ª","–í–∫–ª","–ù–∞–∑–∞–¥")
if FC == 3 then 
S1() 
    elseif FC == 2 then
qmnb = {
{["memory"] = 32768},
{["name"] = "ON"},
{["value"] = -1.6542215634762601E38, ["type"] = 16},
{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},
}
qmxg = {
{["value"] = 280, ["offset"] = 4, ["type"] = 16},

}
xqmnb(qmnb)
qmnb = {
{["memory"] = 16384},
{["name"] = "ON"},
{["value"] = -1.6542215634762601E38, ["type"] = 16},
{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},
}
qmxg = {
{["value"] = 280, ["offset"] = 4, ["type"] = 16},

}
xqmnb(qmnb)
elseif FC == 1 then
qmnb = {
{["memory"] = 32768},
{["name"] = "OFF"},
{["value"] = -1.6542215634762601E38, ["type"] = 16},
{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},
}
qmxg = {
{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}
xqmnb(qmnb)
qmnb = {
{["memory"] = 16384},
{["name"] = "OFF"},
{["value"] = -1.6542215634762601E38, ["type"] = 16},
{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},
}
qmxg = {
{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}
xqmnb(qmnb)
end end

function F1() 
tx.clearResults() 
tx.clearList() 
FQ = tx.prompt({
"–î–ª–∏–Ω–Ω–∞ –ê–Ω—Ç–µ–Ω–Ω—ã [-1000;20000] "
}, {1.5}, {"number"})
if FQ == nil then
do return end
return
end
if loadcod == false then
tx.clearResults()
tx.setRanges(32)
tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)
tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)
tx.addListItems((tx.getResults(10000)))
tx.saveList(tx.EXT_STORAGE .. "/./t0x1c.txt", 0)
tx.clearResults()
tx.clearList()
loadcod = true
end
tx.loadList(tx.EXT_STORAGE .. "/./t0x1c.txt", 0)
a = tx.getListItems()
tx.loadResults(a)
tx.removeListItems(a)
g = tx.getResults(10000)
tx.editAll(ml[1], 16)
tx.clearResults() 
tx.clearList() 
tx.toast("‚úÖ‚úÖ‚úÖ") 
end 

function F2()
FC = tx.alert('Love You', '–ë–µ–ª—ã–π –ü–µ—Ä—Å–æ–Ω–∞–∂', '–í–´–ö–õ', '–í–•')
  if FC == 1 then
qmnb = {
{["memory"] = 32},
{["name"] = "ON"},
{["value"] = 82.5, ["type"] = 16},
{["lv"] = 15.0, ["offset"] = 4, ["type"] = 16},
{["lv"] = 5.0, ["offset"] = 12, ["type"] = 16},
{["lv"] = 0.75, ["offset"] = 1316, ["type"] = 16},
}
qmxg = {
{["value"] = 20.0123456789, ["offset"] = 1316, ["type"] = 16},

}
xqmnb(qmnb)
tx.clearResults()

elseif FC == 2 then
tx.clearResults()
tx.setRanges(32)
tx.searchNumber("20.0123456789", tx.TYPE_FLOAT)
tx.getResults(900)
tx.editAll("0.75", tx.TYPE_FLOAT)
tx.clearResults()

elseif FC == 3 then 
tx.clearResults()
tx.setRanges(tx.REGION_VIDEO)
tx.searchNumber("5.127597087642792E-29", tx.TYPE_FLOAT)
tx.getResults(900)
tx.editAll("5.127597087642792E29", tx.TYPE_FLOAT)
end
end

function author()
AU = tx.choice({
	"‚úÖ YouTube Channel",
	"‚úÖ Telegram General", 
	"‚úÖ Telegram Chat", 
	"‚úÖ Telegram Last Island Of Survival", 
	"‚úÖ Telegram Pubg Mobile", 
	"‚úÖ Telegram Standoff 2", 
	"‚úÖ Telegram Free Fire",
	"‚úÖ Tik Tok", 
	"‚úÖ Wuxin", 
	"üîô BACK "
	},nil, "‚ÑπÔ∏è Menu Author ‚ÑπÔ∏è\n‚ö†Ô∏è Click on the button to copy the link ‚ö†Ô∏è" ) 
	if AU == 1 then youtube() end 
	if AU == 2 then tgchan() end 
	if AU == 3 then tgchat() end 
	if AU == 4 then tglios() end 
	if AU == 5 then tgpubg() end 
	if AU == 6 then tgso2() end 
	if AU == 7 then tgff() end 
	if AU == 8 then tiktok() end 
	if AU == 9 then wux() end 
	if AU == 10 then Main() end 
end

function youtube() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://youtube.com/c/T0X1CHacking") 
end 

function tgchan() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/T0X1CCF") 
end 

function tgchat() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/t0x1c_chatt") 
end

function tglios() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/t0x1c_lios") 
end 

function tgpubg() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText(" https://t.me/t0x1c_pubg") 
end 

function tgso2() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/t0x1c_so2") 
end 

function tgff() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/t0x1c_ff") 
end 

function tiktok() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("@waibesx") 
end 

function wux() 
tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 
tx.copyText("https://t.me/wuxin9999hack") 
end 

function ex()
e = tx.choice({
	"‚úÖ Yes", 
	"‚ùé No"
	}, nil, "‚ö†Ô∏è EXIT? ‚ö†Ô∏è") 
if e == 1 then exit() end 
if e == 2 then Main() end 
end 

function exit() 
print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
tx.toast("üëã GoodBye üëã")
os.exit() 
end 

while true do
  if tx.isVisible(true) then
    T = 1
    tx.setVisible(false)
  end
  if T == 1 then
  tx.clearResults() 
  tx.clearList() 
    Main()  
end
end 
tx.clearResults() 

tx.clearList() 

--–õ–ò–¶–ï–ù–ó–ò–Ø 4

hl = {} file = io.open("license_4.io","r") for lol in file:lines() do table.insert(hl,lol) end l = {"2280"} if hl[1] == l[1] or hl[1] == l[2] or hl[1] == l[3] then 

else 

tx.alert("üíé 4 License\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüö´ LICENSE NOT FOUND üö´") 

tx.setVisible(true)

print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

os.exit()

 end

 

 ----------------------------------------------------------------------------------------------------------------------------------------------------

 --–õ–ò–¶–ï–ù–ó–ò–Ø 5

 hl = {} file = io.open("license_5.io","r") for lol in file:lines() do table.insert(hl,lol) end l = {"2289"} if hl[1] == l[1] or hl[1] == l[2] or hl[1] == l[3] then 

else 

tx.alert("üíé 5 License\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüö´ LICENSE NOT FOUND üö´") 

tx.setVisible(true)

print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

os.exit()

 end

 

 ---------------------------------------------------------------------------------------------------------------

 --–õ–ò–¶–ï–ù–ó–ò–Ø 6

 hl = {} file = io.open("license_6.io","r") for lol in file:lines() do table.insert(hl,lol) end l = {"2288"} if hl[1] == l[1] or hl[1] == l[2] or hl[1] == l[3] then 

else 

tx.alert("üíé 6 License\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüö´ LICENSE NOT FOUND üö´") 

tx.setVisible(true)

print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

os.exit()

 end

local loadcode = false

local loadcod = false

local loadcodd = false

function split(szFullString, szSeparator)

local nFindStartIndex = 1 

local nSplitIndex = 1 

local nSplitArray = {} while true do 

local 

nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) 

if not nFindLastIndex then 

nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) 

break end 

nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) 

nFindStartIndex = nFindLastIndex + string.len(szSeparator) 

nSplitIndex = nSplitIndex + 1 end return 

nSplitArray end function 

xgxc(szpy, qmxg) for x = 1, #(qmxg) do 

xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] 

xgsz = qmxg[x]["value"] 

tx.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) 

xgsl = xgsl + 1 end end function 

xqmnb(qmnb) 

tx.clearResults() 

tx.setRanges(qmnb[1]["memory"]) 

tx.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) 

if tx.getResultCount() == 0 then 

tx.toast(qmnb[2]["name"] .. "üíöüíúüíö")

else 

tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 

tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 

tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) 

if tx.getResultCount() == 0 then 

tx.toast(qmnb[2]["name"] .. "üíöüíö") 

else 

sl = tx.getResults(999999) 

sz = tx.getResultCount() 

xgsl = 0 if sz > 999999 then 

sz = 999999 end for i = 1, sz do 

pdsz = true for v = 4, #(qmnb) do if 

pdsz == true then 

pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] 

pysz[1].flags = qmnb[v]["type"] 

szpy = tx.getValues(pysz) 

pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") 

tzszpd = szpd[1] 

pyszpd = szpd[2] 

if tzszpd == pyszpd then 

pdjg = true pdsz = true else 

pdjg = false pdsz = false end end end 

if pdjg == true then 

szpy = sl[i].address xgxc(szpy, qmxg) 

xgjg = true end end 

if xgjg == true then 

tx.toast(qmnb[2]["name"] .. "üíöüíöüíö" .. xgsl .. "üíúüíú") 

else 

tx.toast(qmnb[2]["name"] .. "üíöüíöüíö") 

end 

end 

end 

end

function SHCF()

os.exit()

SHCF()

end

dog=0

CS=0 

function SH_searchNumber(n,type,ft,sign,r,s)

tx.setVisible(false) 

tx.searchNumber(n,type,ft,sign,r,s)

if tx.isVisible(true) then

dog=1

tx.setVisible(false) 

end 

if dog > 0 then

nc()

dog = 0

CS=CS-1

end

if CS < 0 then

SHCF()

end

end

function Voice(Rain)

end

local _KY,jldz,jmzj=function(mtz,mzj)for xh=1,10 do mtz=mtz:gsub(mzj[xh],xh-1)end return mtz end,{},{}for xh=1,10 do jmzj[xh]=debug.getinfo(_KY)[string.char(115,111,117,114,99,101)]:sub(xh,xh)end function KYXG(DZ,XGSJ,GNM,JLDZ)local t={}for i=1,#DZ do for k,w in ipairs(XGSJ) do offset=w[1]*4 t[#t+1]={}t[#t].address=DZ[i]+offset t[#t].flags=w[2]t[#t].value=w[3]if(w[4]==true)then local item={}item[#item+1]=t[#t]item[#item].freeze=true tx.addListItems(item)end end end tx.setValues(t)tx.toast("‚úÖ‚úÖ")end function KY_ZZ(NCLX,SSSJ,XGSJ,GNM)tx.setVisible(false)if jldz[NCLX[4]]==nil then tx.clearResults()tx.setRanges(NCLX[1])tx.searchNumber(NCLX[2],NCLX[3])local count=tx.getResultCount()local result=tx.getResults(count)tx.clearResults()local data={}if(count>0)then for i,v in ipairs(result) do v.isUseful=true end for k=1,#SSSJ do local tmp={}local offset=_KY(SSSJ[k][1],jmzj)*4 local num=_KY(SSSJ[k][2],jmzj)for i,v in ipairs(result) do tmp[#tmp+1]={}tmp[#tmp].address=v.address+offset tmp[#tmp].flags=v.flags end tmp=tx.getValues(tmp)for i,v in ipairs(tmp) do if (v.value~=num)then result[i].isUseful=false end end end for i,v in ipairs(result) do if (v.isUseful)then data[#data+1]=v.address end end if data[1]==nil then tx.toast("‚úÖ‚úÖ‚úÖ")else if NCLX[4]~=false then jldz[NCLX[4]]=data KYXG(data,XGSJ,GNM,"‚úÖ")else KYXG(data,XGSJ,GNM,"...")end end else tx.toast("error")end else KYXG(jldz[NCLX[4]],XGSJ,GNM,"...")end end

function SearchWrite(Search, Write, Type) tx.clearResults()tx.setVisible(false) tx.searchNumber(Search[1][1]*-1,Type) local count = tx.getResultCount() local result = tx.getResults(count)tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do  local tmp = {}local offset = Search[k][2] - base  local num = Search[k][1]for i, v in ipairs(result) do tmp[#tmp+1] = {}tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp)for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {}local base = Search[1][2]for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {}t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1]if (w[3] == true) then local item = {}item[#item+1] = t[#t]item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t)tx.toast("‚úÖ‚úÖ‚úÖ")else  return false end else  return false end end  

function SearchWriteohnb(Search, Write, Ohnb) tx.clearResults() tx.setVisible(false) SH_searchNumber(Search[1][1], Ohnb) local count = tx.getResultCount() local result = tx.getResults(count) tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then tx.toast("‚ôªÔ∏è‚ôªÔ∏è‚ôªÔ∏è"..#data.."‚úÖ‚úÖ‚úÖ") local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Ohnb t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t) else tx.toast("error", false) return false end else tx.toast("error") return false end end

function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] tx.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) xgsl = xgsl + 1 end end function xqmnb(qmnb) tx.clearResults() tx.setRanges(qmnb[1]["memory"]) tx.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if tx.getResultCount() == 0 then tx.toast(qmnb[2]["name"] .. "error")else tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) tx.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if tx.getResultCount() == 0 then tx.toast(qmnb[2]["name"] .. "error") else sl = tx.getResults(999999) sz = tx.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = tx.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) xgjg = true end end if xgjg == true then tx.toast(qmnb[2]["name"] .. "‚úÖ‚úÖ‚úÖ‚ôªÔ∏è" .. xgsl .. "zzz") else tx.toast(qmnb[2]["name"] .. "error") end end end end

function SearchWrite(Search, Write, Type) tx.clearResults() tx.setVisible(false) tx.searchNumber(Search[1][1], Type) local count = tx.getResultCount() local result = tx.getResults(count) tx.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = tx.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then tx.toast('üá∫üá¶ üá∫üá¶ üá∫üá¶') local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true tx.addListItems(item) end end end tx.setValues(t) else tx.toast("üá∫üá¶", false) return false end else tx.toast("üá∫üá¶") return false end end

tx.toast("Hello Great Hacker ü§ó") 

g = tx.alert("\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄüíö Made A T0X1C - V$XV Script üíö\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüñ§ Thank You So Much - Wuxin üñ§\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†ÅøENG |üëå Welcome to my script, thanks for buying, good game.\n‚îÄ‚îÄ‚îÄ‚îÄ\nüá∑üá∫RU |üëå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–π —Å–∫—Ä–∏–ø—Ç, —Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –ø–æ–∫—É–ø–∫—É, —Ö–æ—Ä–æ—à–µ–π –≤–∞–º –∏–≥—Ä—ã. \n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ The Script Was Tested On Poco F1 With Root Rights\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n‚ôªÔ∏è Powered By GG T0X1C ‚ôªÔ∏è","END", "", "EXIT" ) 

if g == 1 then 

elseif g == 2 then 

elseif g == 3 then

print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

tx.toast("üëã GoodBye üëã")

os.exit()

end 

function Main() 

BG = tx.choice({

"| üá∑üá∫ | RU",

"| üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø | ENG", 

"üë§ Author",

"üö™ EXIT "

},nil, "üíé V$XV - By T0X1C\nüéÆ Last Island Of Survival ")

if BG == 1 then M1() end 

if BG == 2 then M2() end 

if BG == 3 then author() end   

if BG == 4 then ex() end

T = -1

 end 

function M1() 

BG = tx.choice({

	"üíé | –ü–µ—Ä—Å–æ–Ω–∞–∂", 

	"üíé | –ú–∏—Ä", 

	"üíé | –û—Ä—É–∂–∏–µ", 

	"üíé | –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", 

	"üîô –ù–ê–ó–ê–î", 

	}, nil, "üíéV$XV Hack - By T0X1C\nüåÄ –ú–µ–Ω—é") 

	if BG == 1 then S1() end 

	if BG == 2 then S2() end 

	if BG == 3 then S4() end 

	if BG == 4 then S3() end 

	if BG == 5 then Main() end 

	end 

function S1() 

BG = tx.multiChoice({

	"üóø | –ê–Ω—Ç–µ–Ω–∞", 

	"üóø | –ê–Ω—Ç–µ–Ω–∞ 2",

	"üóø | –í–• / –ë–µ–ª—ã–π –ü–µ—Ä—Å–æ–Ω–∞–∂", 

	"üóø | –ê–π–ø–∞–¥ –û–±–∑–æ—Ä", 

	"üóø | –ê–π–ø–∞–¥ –û–±–∑–æ—Ä 2",

	"üóø | –•–æ–¥–∏—Ç—å –ü–æ–¥ –í–æ–¥–æ–π", 

	"üóø | –ü–ª–∞–≤–∞—Ç—å –í –ù–µ–±–µ", 

	"üóø | –õ–µ—Ç–∞—Ç—å –ù–∞ –§—É–Ω–¥–∞–º–µ–Ω—Ç–µ", 

	"üóø | –•–æ–¥–∏—Ç—å –ü–æ–¥ –ö–∞—Ä—Ç–æ–π", 

	"üîô –ù–ê–ó–ê–î", 

	}, nil, "üíé V$XV Hack\nüåÄ –ú–µ–Ω—é –ü–µ—Ä—Å–æ–Ω–∞–∂") 

	if BG[1] == true then F1() end 

	if BG[2] == true then F2() end 

	if BG[3] == true then F3() end 

	if BG[4] == true then F4() end 

	if BG[5] == true then F5() end 

	if BG[6] == true then F6() end 

	if BG[7] == true then F7() end 

	if BG[8] == true then F8() end 

	if BG[9] == true then F9() end 

	if BG[10] == true then M1() end 

	if BG == nil then else end

end 

function F9()

Q = gg.prompt({"Choose the dive you need: [-3;200] "},{0},{"number"})

if Q == nil then return else 

qmnb = {

{["memory"] = 32},

{["name"] = "ON"},

{["value"] = 2.755148962647596E-40, ["type"] = 16},

{["lv"] = 2.3509885615147286E-38, ["offset"] = -48, ["type"] = 16},

{["lv"] = -0.7071068286895752, ["offset"] = -40, ["type"] = 16},

{["lv"] = 0.7071068286895752, ["offset"] = -28, ["type"] = 16},

{["lv"] = 0.0, ["offset"] = -20, ["type"] = 16},

}

qmxg = {

{["value"] = Q[1], ["offset"] = -20, ["type"] = 16},

}

xqmnb(qmnb)

end

end

function F8()

     F = tx.alert(' Foundation Fly ', 'ON', 'OFF', "BACK" )

    if F == 1 then   

qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "10%"},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24000",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 0,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

    qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "50%"},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24004",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 0,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

    qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "100% "},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24008",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 0,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

elseif F == 2 then

qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "10%"},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24000",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 4294967296,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

    qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "50%"},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24004",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 4294967296,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

    qmnb = {

      {memory = tx.REGION_ANONYMOUS},

      {name = "100% "},

      {

        value = "2139095039",

        type = 32

      },

      {

        lv = "24008",

        offset = 20,

        type = 4

      }

    }

    qmxg = {

      {

        value = 4294967296,

        offset = 44,

        type = 32

      }

    }

    xqmnb(qmnb)

tx.clearResults()

elseif F == 3 then S1() 

end

end 

function F7()

Fd = tx.prompt({"Swimming Sky: [-100;999] "},{20},{"number"})

if Fd == nil then return else

qmnb = {

{["memory"] = 32},

{["name"] = "ON"},

{["value"] = -4900.0, ["type"] = 16},

{["lv"] = 2.3509885615147286E-38, ["offset"] = -208, ["type"] = 16},

{["lv"] = 1.401298464324817E-45, ["offset"] = -204, ["type"] = 16},

{["lv"] = -0.7071068286895752, ["offset"] = -200, ["type"] = 16},

{["lv"] = 0.7071068286895752, ["offset"] = -188, ["type"] = 16},

{["lv"] = 2.755148962647596E-40, ["offset"] = -160, ["type"] = 16},

}

qmxg = {

{["value"] = Fd[1], ["offset"] = -180, ["type"] = 16},

}

xqmnb(qmnb)

end end

function F6() 

FC = tx.alert("Walking Under Water", "–í–∫–ª", "–í—ã–∫–ª","–ù–∞–∑–∞–¥" )

  if FC == 1 then

    tx.clearResults()

    tx.setRanges(32)

    tx.searchNumber("1.0F;0.00999999978F;3.7835059e-43F;4.2038954e-45F;10,000.0F;10,000.001953125F", tx.REGION_C_BSS, false, tx.SIGN_FUZZY_EQUAL, 0, -1)

    tx.searchNumber("10000", tx.REGION_C_BSS, false, tx.SIGN_FUZZY_EQUAL, 0, -1)

    tx.getResults(999)

    tx.editAll("0.0012345", tx.REGION_C_BSS)

    tx.clearResults()

    tx.toast("‚úÖ‚úÖ") 

  elseif FC == 2 then

    tx.clearResults()

    tx.setRanges(32)

    tx.searchNumber("0.0012345", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)

    tx.getResults(999)

    tx.editAll("10000", tx.TYPE_FLOAT)

    tx.clearResults()

    elseif FC == 3 then 

    S1() 

    tx.toast("‚úÖ‚úÖ") 

  end

end 

function F5()

FC = tx.alert("Ipad View 2","OFF","ON","BACK")

if FC == 3 then 

S1() 

    elseif FC == 2 then

qmnb = {

{["memory"] = 32768},

{["name"] = "ON"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 240, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

qmnb = {

{["memory"] = 16384},

{["name"] = "ON"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 240, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

elseif FC == 1 then

qmnb = {

{["memory"] = 32768},

{["name"] = "OFF"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

qmnb = {

{["memory"] = 16384},

{["name"] = "OFF"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

end end

function F4()

FC = tx.alert("Ipad View","OFF","ON","BACK")

if FC == 3 then 

S1() 

    elseif FC == 2 then

qmnb = {

{["memory"] = 32768},

{["name"] = "ON"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 280, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

qmnb = {

{["memory"] = 16384},

{["name"] = "ON"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 280, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

elseif FC == 1 then

qmnb = {

{["memory"] = 32768},

{["name"] = "OFF"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

qmnb = {

{["memory"] = 16384},

{["name"] = "OFF"},

{["value"] = -1.6542215634762601E38, ["type"] = 16},

{["lv"] = 3.1415927410125732, ["offset"] = 8, ["type"] = 16},

}

qmxg = {

{["value"] = 360, ["offset"] = 4, ["type"] = 16},

}

xqmnb(qmnb)

end end

function F1() 

tx.clearResults() 

tx.clearList() 

FQ = tx.prompt({

"Antenna Length [-2000;2000] "}, {2000}, {"number"})

if FQ == nil then

do return end

return

end

if loadcod == false then

tx.clearResults()

tx.setRanges(32)

tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)

tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)

tx.addListItems((tx.getResults(10000)))

tx.saveList(tx.EXT_STORAGE .. "/./t0x1c.txt", 0)

tx.clearResults()

tx.clearList()

loadcod = true

end

tx.loadList(tx.EXT_STORAGE .. "/./t0x1c.txt", 0)

a = tx.getListItems()

tx.loadResults(a)

tx.removeListItems(a)

g = tx.getResults(10000)

tx.editAll(FQ[1], 16)

tx.clearResults() 

tx.clearList() 

tx.toast("‚úÖ‚úÖ‚úÖ") 

end 

function F2()

gh = tx.prompt({

"Antenna Height [Max 2000] "}, {2000}, {"number"})

if gh == nil then

do return end

return

end

if loadcod == false then

tx.clearResults()

tx.setRanges(32)

tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)

tx.searchNumber("0.16947640479", tx.TYPE_FLOAT, false, tx.SIGN_EQUAL, 0, -1)

tx.addListItems((tx.getResults(10000)))

tx.saveList(tx.EXT_STORAGE .. "/./toxic.txt", 0)

tx.clearResults()

tx.clearList()

loadcod = true

end

tx.loadList(tx.EXT_STORAGE .. "/./toxic.txt", 0)

a = tx.getListItems()

tx.loadResults(a)

tx.removeListItems(a)

g = tx.getResults(10000)

tx.editAll(gh[1], 16)

end

function F3()

FC = tx.alert('WH / White Character', 'White Character', 'OFF', 'WH')

  if FC == 1 then

qmnb = {

{["memory"] = 32},

{["name"] = "ON"},

{["value"] = 82.5, ["type"] = 16},

{["lv"] = 15.0, ["offset"] = 4, ["type"] = 16},

{["lv"] = 5.0, ["offset"] = 12, ["type"] = 16},

{["lv"] = 0.75, ["offset"] = 1316, ["type"] = 16},

}

qmxg = {

{["value"] = 20.0123456789, ["offset"] = 1316, ["type"] = 16},

}

xqmnb(qmnb)

tx.clearResults()

elseif FC == 2 then

tx.clearResults()

tx.setRanges(32)

tx.searchNumber("20.0123456789", tx.TYPE_FLOAT)

tx.getResults(900)

tx.editAll("0.75", tx.TYPE_FLOAT)

tx.clearResults()

elseif FC == 3 then 

tx.clearResults()

tx.setRanges(tx.REGION_VIDEO)

tx.searchNumber("5.127597087642792E-29", tx.TYPE_FLOAT)

tx.getResults(900)

tx.editAll("5.127597087642792E29", tx.TYPE_FLOAT)

end

end

function author()

AU = tx.choice({

	"‚úÖ YouTube Channel",

	"‚úÖ Telegram General", 

	"‚úÖ Telegram Chat", 

	"‚úÖ Telegram Last Island Of Survival", 

	"‚úÖ Telegram Pubg Mobile", 

	"‚úÖ Telegram Standoff 2", 

	"‚úÖ Telegram Free Fire",

	"‚úÖ Tik Tok", 

	"‚úÖ Wuxin", 

	"üîô BACK "

	},nil, "‚ÑπÔ∏è Menu Author ‚ÑπÔ∏è\n‚ö†Ô∏è Click on the button to copy the link ‚ö†Ô∏è" ) 

	if AU == 1 then youtube() end 

	if AU == 2 then tgchan() end 

	if AU == 3 then tgchat() end 

	if AU == 4 then tglios() end 

	if AU == 5 then tgpubg() end 

	if AU == 6 then tgso2() end 

	if AU == 7 then tgff() end 

	if AU == 8 then tiktok() end 

	if AU == 9 then wux() end 

	if AU == 10 then Main() end 

end

function youtube() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://youtube.com/c/T0X1CHacking") 

end 

function tgchan() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/T0X1CCF") 

end 

function tgchat() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/t0x1c_chatt") 

end

function tglios() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/t0x1c_lios") 

end 

function tgpubg() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText(" https://t.me/t0x1c_pubg") 

end 

function tgso2() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/t0x1c_so2") 

end 

function tgff() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/t0x1c_ff") 

end 

function tiktok() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("@waibesx") 

end 

function wux() 

tx.toast('‚ö†Ô∏è Link copied ‚ö†Ô∏è') 

tx.copyText("https://t.me/wuxin9999hack") 

end 

function ex()

e = tx.choice({

	"‚úÖ Yes", 

	"‚ùé No"

	}, nil, "‚ö†Ô∏è EXIT? ‚ö†Ô∏è") 

if e == 1 then exit() end 

if e == 2 then Main() end 

end 

function exit() 

print("‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíé V$XV Hack - By T0X1C üíé\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíú Subscribe My Channel\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram - @T0X1CCF\n\n‚úÖ YouTube - T0X1C\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüíö Subscribe My Friend Wuxin\n‚îÄ‚îÄ‚îÄ‚îÄ\n‚úÖ Telegram: @wuxin9999hack\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")

tx.toast("üëã GoodBye üëã")

os.exit() 

end 

while true do

  if tx.isVisible(true) then

    T = 1

    tx.setVisible(false)

  end

  if T == 1 then

  tx.clearResults() 

  tx.clearList() 

    Main()  

end

end
